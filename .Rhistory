install maps
install.packages("maps")
install.packages("plotly")
install.packages('ggmap')
install.packages('mapdata')
install.packages('ggplot')
install.packages('ggplot2')
warnings()
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
states <- map_data("state")
colnames(states) = c("long","lat","group","order","region","ref.num")
states$ref.num=as.numeric(levels(states$ref.num))[states$ref.num]
for(x in 1:15537){
if(states$region[x] %in% c("connecticut", "maine", "massachusetts", "new hampshire", "rhode island", "vermont")){
states$ref.num[x] = 5.6
} else if (states$region[x] %in% c("new jersey", "new york", "pennsylvania")){
states$ref.num[x] = 15.4
} else if (states$region[x] %in% c("illinois", "indiana", "michigan", "ohio",  "wisconsin")){
states$ref.num[x] = 18.1
} else if (states$region[x] %in% c("iowa", "kansas", "minnesota", "missouri", "nebraska", "north dakota",  "south dakota")){
states$ref.num[x] = 8.3
} else if (states$region[x] %in% c("delaware", "florida", "georgia", "maryland", "north carolina", "south carolina", "virginia", "district of columbia" , "west virginia")){
states$ref.num[x] = 23.3
} else if (states$region[x] %in% c("alabama", "kentucky", "mississippi", "tennessee")){
states$ref.num[x] = 7.2
} else if (states$region[x] %in% c("arkansas", "louisiana", "oklahoma","texas")){
states$ref.num[x] = 13.5
} else if (states$region[x] %in% c("arizona", "colorado", "idaho", "montana", "nevada", "new mexico", "utah","wyoming")){
states$ref.num[x] = 8.5
} else if (states$region[x] %in% c("alaska", "california", "hawaii", "oregon", "washington")){
states$ref.num[x] = 17.9
}
}
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = ref.num, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
#########
state_base = ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
state_bb2 = state_base +  geom_polygon(data = states, aes(fill = ref.num), color = "white") +
geom_polygon(color = "black", fill = NA) +
theme_bw()+ scale_fill_gradientn(colours = rev(rainbow(7)), breaks = c(5, 10, 15, 20, 25, 30))
state_bb2
knitr::opts_chunk$set(echo = TRUE)
library(maps)
library(tidyverse)
library(readxl)
library(plotly)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggmap)
library(mapdata)
#PLOT 1
fridgeSizeSW3 %>%
group_by(Size) %>%
summarise_all(funs(mean(., na.rm=TRUE)))
knitr::opts_chunk$set(echo = TRUE)
library(maps)
library(tidyverse)
library(readxl)
library(plotly)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggmap)
library(mapdata)
############TYPE vs South/West Regions############
hc3_8 <- read_excel("./MyData/hc3.8.xlsx")
data1 = hc3_8
save( data1, file = "./MyData/data1.Rdata" )
data1
hc3_7 <- read_excel("./MyData/hc3.7.xlsx")
data2 = hc3_7
save(data2, file = "./MyData/data2.Rdata" )
data2
hc3_5 <- read_excel("./MyData/hc3.5.xlsx")
data3 = hc3_5
save(data3, file = "./MyData/data3.Rdata" )
data3
hc3_4 <- read_excel("./MyData/hc3.4.xlsx")
data4 = hc3_4
save(data4, file = "./MyData/data4.Rdata" )
data4
hc3_6 <- read_excel("./MyData/hc3.6.xlsx")
data5 = hc3_6
save(data5, file = "./MyData/data5.Rdata")
data5
####break the data into subsets####
fridgeSizeSW = data1[110:115 ,]
fridgeSizeNM = data2[107:112 ,]
fridgeTypeSW = data1[117:123 ,]
fridgeTypeNM = data2[114:120 ,]
incomeS = data3[107:112,]
incomeT = data3[114:120,]
membersS = data4[107:112,]
membersT = data4[114:120,]
climateS = data5[108:112,]
climateT =data5[115:120,]
####Init col names####
colnames(fridgeSizeSW) = c("Size", "Total","TotalSouth","South Atlantic","East South Central", "West South Central","Total West","Total Mountain", "Mountain North", "Mountain South", "Pacific")
colnames(fridgeSizeNM) = c("Size", "Total","Total Northeast","New England","Middle Atlantic", "Total Midwest","East North Central","West North Central")
colnames(fridgeTypeSW) = c("Type", "Total","TotalSouth","South Atlantic","East South Central", "West South Central","Total West","Total Mountain", "Mountain North", "Mountain South", "Pacific")
colnames(fridgeTypeNM) = c("Type", "Total","Total Northeast","New England","Middle Atlantic", "Total Midwest","East North Central","West North Central")
colnames(incomeS) = c("Size", "Total", "under_20", "20_40","40_60", "60_80", "80_100", "100_120","120_140", "over_140")
colnames(incomeT) = c("Type", "Total", "under_20", "20_40","40_60", "60_80", "80_100", "100_120","120_140", "over_140")
colnames(membersS) = c("Size", "Total", "OneMember", "TwoMembers", "ThreeMembers", "FourMembers", "FiveMoreMembers")
colnames(membersT) = c("Type", "Total", "OneMember", "TwoMembers", "ThreeMembers", "FourMembers", "FiveMoreMembers")
colnames(climateS) = c("Size", "Total", "Cold", "Mixed-humid", "Hot-dry", "Hot-humid", "Marine")
colnames(climateT) = c("Type", "Total", "Cold", "Mixed-humid", "Hot-dry", "Hot-humid", "Marine")
####Dropping total col####
fridgeSizeSW2 <- within(fridgeSizeSW, rm(Total))
fridgeSizeNM2 <- within(fridgeSizeNM, rm(Total))
fridgeTypeSW2 <- within(fridgeTypeSW, rm(Total))
fridgeTypeNM2 <- within(fridgeTypeNM, rm(Total))
incomeS2  <- within(incomeS, rm(Total))
incomeT2  <- within(incomeT, rm(Total))
membersS2  <- within(membersS, rm(Total))
membersT2  <- within(membersT, rm(Total))
climateS2  <- within(climateS, rm(Total))
climateT2  <- within(climateT, rm(Total))
####Coerce fridge size/type col to factors/categorical####
fridgeSizeSW2$Size <- as.factor(fridgeSizeSW2$Size)
fridgeSizeNM2$Size <- as.factor(fridgeSizeNM2$Size)
fridgeTypeSW2$Type <- as.factor(fridgeTypeSW2$Type)
fridgeTypeNM2$Type <- as.factor(fridgeTypeNM2$Type)
incomeS2$Size  <- as.factor(incomeS2$Size)
incomeT2$Type  <- as.factor(incomeT2$Type)
membersS2$Size  <- as.factor(membersS2$Size)
membersT2$Type  <- as.factor(membersT2$Type)
climateS2$Size  <- as.factor(climateS2$Size)
climateT2$Type  <- as.factor(climateT2$Type)
####Coerce rest of cols to continous/numeric####
fridgeSizeSW2[, 2:10] <- sapply(fridgeSizeSW2[, 2:10], as.numeric)
fridgeSizeNM2[, 2:7] <- sapply(fridgeSizeNM2[, 2:7], as.numeric)
fridgeTypeSW2[, 2:10] <- sapply(fridgeTypeSW2[, 2:10], as.numeric)
fridgeTypeNM2[, 2:7] <- sapply(fridgeTypeNM2[, 2:7], as.numeric)
incomeS2[, 2:9]  <- sapply(incomeS2[, 2:9], as.numeric)
incomeT2[, 2:9]  <- sapply(incomeT2[, 2:9], as.numeric)
membersS2[, 2:6]  <- sapply(membersS2[, 2:6], as.numeric)
membersT2[, 2:6]  <- sapply(membersT2[, 2:6], as.numeric)
climateS2[, 2:6] <- sapply(climateS2[, 2:6], as.numeric)
climateT2[, 2:6] <- sapply(climateT2[, 2:6], as.numeric)
####Rename cols####
colnames(fridgeSizeSW2) <- c("Size","Total South","South Atlantic","East South Central", "West South Central","Total West","Total Mountain", "Mountain North", "Mountain South", "Pacific")
colnames(fridgeSizeNM2) <- c("Size","Total Northeast","New England","Middle Atlantic", "Total Midwest","East North Central","West NorthC entral")
colnames(fridgeTypeSW2) <- c("Type","Total South","South Atlantic","East South Central", "West South Central","Total West","Total Mountain", "Mountain North", "Mountain South", "Pacific")
colnames(fridgeTypeNM2) <- c("Type","Total Northeast","New England","Middle Atlantic", "Total Midwest","East North Central","West North Central")
colnames(incomeS2)  <- c("Size", "Under 20,000", "20,000-40,000","40,000-60,000", "60,000-80,000", "80,000-100,000", "100,000-120,000","120,000-140,000", "Over 140,000")
colnames(incomeT2)  <- c("Type", "Under 20,000", "20,000-40,000","40,000-60,000", "60,000-80,000", "80,000-100,000", "100,000-120,000","120,000-140,000", "Over 140,000")
colnames(membersS2) = c("Size", "One Member", "Two Members", "Three Members", "Four Members", "Five or More Members")
colnames(membersT2) = c("Type", "One Member", "Two Members", "Three Members", "Four Members", "Five or More Members")
colnames(climateS2) = c("Size", "Cold", "Mixed-humid", "Hot-dry", "Hot-humid", "Marine")
colnames(climateT2) = c("Type", "Cold", "Mixed-humid", "Hot-dry", "Hot-humid", "Marine")
####Coerce into tibble --> easier to work with####
fridgeSizeSW3<- as_tibble(melt(fridgeSizeSW2, id = 1))
fridgeSizeNM3<- as_tibble(melt(fridgeSizeNM2, id = 1))
fridgeTypeSW3<- as_tibble(melt(fridgeTypeSW2, id = 1))
fridgeTypeNM3<- as_tibble(melt(fridgeTypeNM2, id = 1))
incomeS3  <- as_tibble(melt(incomeS2, id = 1))
incomeT3  <- as_tibble(melt(incomeT2, id = 1))
membersS3  <- as_tibble(melt(membersS2, id = 1))
membersT3  <- as_tibble(melt(membersT2, id = 1))
climateS3 <- as_tibble(melt(climateS2, id=1))
climateT3 <- as_tibble(melt(climateT2, id=1))
########Rename cols pt1 (xVar/var)###########
colnames(fridgeSizeSW3)[colnames(fridgeSizeSW3) == "variable"] <- "FridgeSize"
colnames(fridgeSizeNM3)[colnames(fridgeSizeNM3) == "variable"] <- "FridgeSize"
colnames(fridgeTypeSW3)[colnames(fridgeTypeSW3) == "variable"] <- "FridgeType"
colnames(fridgeTypeNM3)[colnames(fridgeTypeNM3) == "variable"] <- "FridgeType"
colnames(incomeS3)[colnames(incomeS3) == "variable"]   <- "Income"
colnames(incomeT3)[colnames(incomeT3) == "variable"]   <- "Income"
colnames(membersS3)[colnames(membersS3) == "variable"]   <- "Members"
colnames(membersT3)[colnames(membersT3) == "variable"]   <- "Members"
colnames(climateS3)[colnames(climateS3) == "variable"]   <- "Climate"
colnames(climateT3)[colnames(climateT3) == "variable"]   <- "Climate"
########rename cols pt2 (yVar/value)###########
colnames(fridgeSizeSW3)[colnames(fridgeSizeSW3) == "value"] <- "TotalFrequency"
colnames(fridgeSizeNM3)[colnames(fridgeSizeNM3) == "value"] <- "TotalFrequency"
colnames(fridgeTypeSW3)[colnames(fridgeTypeSW3) == "value"] <- "TotalFrequency"
colnames(fridgeTypeNM3)[colnames(fridgeTypeNM3) == "value"] <- "TotalFrequency"
colnames(incomeS3)[colnames(incomeS3) == "value"]   <- "TotalFrequency"
colnames(incomeT3)[colnames(incomeT3) == "value"]   <- "TotalFrequency"
colnames(membersS3)[colnames(membersS3) == "value"]   <- "TotalFrequency"
colnames(membersT3)[colnames(membersT3) == "value"]   <- "TotalFrequency"
colnames(climateS3)[colnames(climateS3) == "value"]   <- "TotalFrequency"
colnames(climateT3)[colnames(climateT3) == "value"]   <- "TotalFrequency"
##########################################################################################################################################################################################################################################################################################################################################
#PLOT 1
fridgeSizeSW3 %>%
group_by(Size) %>%
summarise_all(funs(mean(., na.rm=TRUE)))
ggplot(fridgeSizeSW3, aes(x = FridgeSize, y = TotalFrequency)) +
geom_col(aes(fill = Size)) + coord_flip() +
ggtitle("Fridge Size vs South/West Region") + labs(x="Fridge Size",y="Frequency")
knitr::opts_chunk$set(echo = TRUE)
library(maps)
library(tidyverse)
library(readxl)
library(plotly)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggmap)
library(mapdata)
states <- map_data("state")
knitr::opts_chunk$set(echo = TRUE)
library(maps)
library(tidyverse)
library(readxl)
library(plotly)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggmap)
library(mapdata)
states <- map_data("state")
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
states <- map_data("state")
colnames(states) = c("long","lat","group","order","region","ref.num")
states$ref.num=as.numeric(levels(states$ref.num))[states$ref.num]
for(x in 1:15537){
if(states$region[x] %in% c("connecticut", "maine", "massachusetts", "new hampshire", "rhode island", "vermont")){
states$ref.num[x] = 5.6
} else if (states$region[x] %in% c("new jersey", "new york", "pennsylvania")){
states$ref.num[x] = 15.4
} else if (states$region[x] %in% c("illinois", "indiana", "michigan", "ohio",  "wisconsin")){
states$ref.num[x] = 18.1
} else if (states$region[x] %in% c("iowa", "kansas", "minnesota", "missouri", "nebraska", "north dakota",  "south dakota")){
states$ref.num[x] = 8.3
} else if (states$region[x] %in% c("delaware", "florida", "georgia", "maryland", "north carolina", "south carolina", "virginia", "district of columbia" , "west virginia")){
states$ref.num[x] = 23.3
} else if (states$region[x] %in% c("alabama", "kentucky", "mississippi", "tennessee")){
states$ref.num[x] = 7.2
} else if (states$region[x] %in% c("arkansas", "louisiana", "oklahoma","texas")){
states$ref.num[x] = 13.5
} else if (states$region[x] %in% c("arizona", "colorado", "idaho", "montana", "nevada", "new mexico", "utah","wyoming")){
states$ref.num[x] = 8.5
} else if (states$region[x] %in% c("alaska", "california", "hawaii", "oregon", "washington")){
states$ref.num[x] = 17.9
}
}
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = ref.num, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
#########
state_base = ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
state_bb2 = state_base +  geom_polygon(data = states, aes(fill = ref.num), color = "white") +
geom_polygon(color = "black", fill = NA) +
theme_bw()+ scale_fill_gradientn(colours = rev(rainbow(7)), breaks = c(5, 10, 15, 20, 25, 30))
state_bb2
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
states <- map_data("state")
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
states = map_data("state")
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
states = map_data("state")
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
states <- map_data("state")
colnames(states) = c("long","lat","group","order","region","ref.num")
states$ref.num=as.numeric(levels(states$ref.num))[states$ref.num]
for(x in 1:15537){
if(states$region[x] %in% c("connecticut", "maine", "massachusetts", "new hampshire", "rhode island", "vermont")){
states$ref.num[x] = 5.6
} else if (states$region[x] %in% c("new jersey", "new york", "pennsylvania")){
states$ref.num[x] = 15.4
} else if (states$region[x] %in% c("illinois", "indiana", "michigan", "ohio",  "wisconsin")){
states$ref.num[x] = 18.1
} else if (states$region[x] %in% c("iowa", "kansas", "minnesota", "missouri", "nebraska", "north dakota",  "south dakota")){
states$ref.num[x] = 8.3
} else if (states$region[x] %in% c("delaware", "florida", "georgia", "maryland", "north carolina", "south carolina", "virginia", "district of columbia" , "west virginia")){
states$ref.num[x] = 23.3
} else if (states$region[x] %in% c("alabama", "kentucky", "mississippi", "tennessee")){
states$ref.num[x] = 7.2
} else if (states$region[x] %in% c("arkansas", "louisiana", "oklahoma","texas")){
states$ref.num[x] = 13.5
} else if (states$region[x] %in% c("arizona", "colorado", "idaho", "montana", "nevada", "new mexico", "utah","wyoming")){
states$ref.num[x] = 8.5
} else if (states$region[x] %in% c("alaska", "california", "hawaii", "oregon", "washington")){
states$ref.num[x] = 17.9
}
}
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = ref.num, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)
#########
state_base = ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
state_bb2 = state_base +  geom_polygon(data = states, aes(fill = ref.num), color = "white") +
geom_polygon(color = "black", fill = NA) +
theme_bw()+ scale_fill_gradientn(colours = rev(rainbow(7)), breaks = c(5, 10, 15, 20, 25, 30))
state_bb2
knitr::opts_chunk$set(echo = TRUE)
require(maps)
require(tidyverse)
require(readxl)
require(plotly)
require(ggplot2)
require(reshape2)
require(dplyr)
require(ggmap)
require(mapdata)
############TYPE vs South/West Regions############
hc3_8 <- read_excel("./MyData/hc3.8.xlsx")
data1 = hc3_8
save( data1, file = "./MyData/data1.Rdata" )
data1
hc3_7 <- read_excel("./MyData/hc3.7.xlsx")
data2 = hc3_7
save(data2, file = "./MyData/data2.Rdata" )
data2
hc3_5 <- read_excel("./MyData/hc3.5.xlsx")
data3 = hc3_5
save(data3, file = "./MyData/data3.Rdata" )
data3
hc3_4 <- read_excel("./MyData/hc3.4.xlsx")
data4 = hc3_4
save(data4, file = "./MyData/data4.Rdata" )
data4
hc3_6 <- read_excel("./MyData/hc3.6.xlsx")
data5 = hc3_6
save(data5, file = "./MyData/data5.Rdata")
data5
